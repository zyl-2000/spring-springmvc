<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">


<!--    声明组件扫描器-->
    <context:component-scan base-package="com.bjpowernode.controller" />

<!--    声明springmvc中的视图解析器，帮助开发人员设置视图文件的路径-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<!--        前缀：视图文件路径-->
        <property name="prefix" value="/WEB-INF/view/" />
<!--        后缀：视图文件的扩展名-->
        <property name="suffix" value=".jsp" />
    </bean>

<!--     注解驱动实现的功能是 完成java对象到json，xml，text，二进制等数据格式的转换-->
<!--   default-servlet-handler 和@RequestMapping注解有冲突,需要加入annotation-driven 解决问题 -->
    <mvc:annotation-driven />

<!--
   第一种处理静态资源的方式：
   需要在springmvc配置文件中加入<mvc:default-servlet-handler>
   原理是:加入这个标签后,框架会创建控制器对象DefaultServletHttpRequestHandler(类似我们自己创建的Controller)
   DefaultServletHttpRequestHandler这个对象可以把接收的请求转发给tomcat的default这个servlet.
-->
    <mvc:default-servlet-handler />

</beans>