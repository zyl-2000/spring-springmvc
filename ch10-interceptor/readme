ch10:拦截器
  1.新建maven web项目
  2.加入依赖
  3.创建Controller类
  4.创建一个普通类，作为拦截器使用
      1）实现HandlerInterceptor接口
      2）实现接口中的三个方法
  5.创建show.jsp
  6.创建springmvc的配置文件
    1)组件扫描器,扫描@Controller注解
    2)声明拦截器,并指定拦截的请求url地址



ch09异常处理
异常处理步骤：
1.新建maven web项目
2.加入依赖
3.新建一个自定义异常类 MyUserException，在定义它的子类，NameException，AgeException
4.在controller中抛出NameException，AgeException
5.创建一个普通类，作为全局异常处理类
   1）在类的上面加入@ControllerAdvice
   2）在类中定义方法，方法的上面加入@ExceptionHandler
6.创建处理异常的视图页面
7.创建springmvc的配置文件
  1）组件扫描器，扫描@Controller注解
  2）组件扫描器，扫描@ControllerAdvice所在的包名
  3）声明注解驱动


ch08：转发和重定向

forward：表示转发
redirect：表示重定向

forward和redirect都是关键字，有一个共同的特点，不和视图解析器共同工作




第一个springmvc项目
需求：用户在一个页面发起请求，请求交给spingmvc的控制器对象，并显示请求的处理结果（在结果页面显示一个欢迎语句）



实现步骤：
1、新建web maven工程
2、加入依赖
   spring-mvc依赖，间接把spring的依赖都加入项目
   jsp，servlet依赖
3、重点：在web.xml中注册springmvc框架的核心对象DispatcheServlet
    1）DispatcheServlet叫做中央调度器，是一个servlet，它的父类继承HttpServlet
    2）DispatcheServlet也叫前端控制器（front controller）
    3）DispatcheServlet负责接收用户提交的请求，调用其他控制器对象，并把请求的处理结果显示给用户

4、创建一个发起请求的页面 index.jsp

5、创建控制器(处理器)类
 1）在类的上面加入@Controller注解，创建对象，并放入到springmvc容器中
 2）在类中的方法上面加入@RequestMapping注解

6、创建一个作为结果的jsp显示请求的处理结果

7、创建springmvc的配置文件（spring的配置文件一样）
  1）声明组件扫描器，指定@Controller注解所在的包名
  2）声明视图解析器。帮助处理视图的。
